name: Release Graffiti Tools

on:
  release:
    types: [created]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  releases-matrix:
    name: Create Graffiti Release Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows

    steps:
      - name: Get Release Info
        run: |
          echo "RELEASE_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "OS_NAME=${{ matrix.goos }}" >> $GITHUB_ENV
      - name: OS darwin
        if: matrix.goos == 'darwin'
        run: echo "OS_NAME=macOS" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1.35
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          md5sum: false
          project_path: "./drawer"
          binary_name: "drawer"
          extra_files: doc examples rocketpool viewer README.md
          asset_name: '${{ env.REPOSITORY_NAME }}-${{ env.RELEASE_TAG }}-${{ env.OS_NAME }}-${{ matrix.goarch }}'

  build-docker:
    name: Create Graffiti Docker Packages
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
      VERSION: ${{ needs.extract-version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./drawer
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
